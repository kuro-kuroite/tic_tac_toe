{"version":3,"sources":["Square.js","Board.js","Game.js","index.js"],"names":["Square","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","_this2","react_default","a","createElement","className","onClick","React","Component","Board","i","Square_Square","squares","renderSquare","Game","history","Array","fill","stepNumber","xIsNext","lines","length","_lines$i","slicedToArray","b","c","slice","calculateWinner","setState","concat","step","status","current","winner","moves","map","_","move","desc","key","jumpTo","Board_Board","handleClick","ReactDOM","render","Game_Game","document","getElementById"],"mappings":"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","file":"static/js/main.4b5c2f27.chunk.js","sourcesContent":["import React from 'react';\nimport './Square.css';\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null,\n    };\n  }\n\n  render() {\n    return (\n      <button\n        className='square'\n        onClick={() => this.props.onClick()}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n","import React from 'react';\nimport './Board.css';\nimport Square from './Square';\n\nexport default class Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n\n      <div>\n        <div className='board-row'>\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className='board-row'>\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className='board-row'>\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './Game.css';\nimport Board from './Board';\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if(squares[a] && squares[a] == squares[b] && squares[a] == squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if(this.calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) ? false : true\n    })\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = this.calculateWinner(current.squares);\n\n    const moves = history.map((_, move) => {\n      const desc = move ?\n        `Go to move #${move}` :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if(winner) {\n      status = `Winner: ${winner}`;\n    }\n    else {\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n    }\n\n    return (\n      <div className='game'>\n        <div className='game-board'>\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className='game-info'>\n          <div>{status}</div>\n          <div>{moves}</div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}